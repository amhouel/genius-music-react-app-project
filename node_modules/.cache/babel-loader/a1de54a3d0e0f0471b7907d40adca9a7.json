{"ast":null,"code":"var _jsxFileName = \"/Users/amhouel/Documents/GA/projects/genius-music-react-app-project/src/SongDetails/index.js\";\nimport React, { Component } from \"react\";\nimport Search from \"../Search\";\nimport SongList from \"../SongList\";\nimport \"./style.css\";\n\nclass SongDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const songData = await fetch(\"https://api.genius.com/songs/\".concat(this.state.songId, \"?text_format=html&access_token=\").concat(this.state.accessToken));\n      const songDataJson = await songData.json();\n      this.setState({\n        albumArt: songDataJson.response.song.album ? songDataJson.response.song.album.cover_art_url : this.state.albumArt,\n        songAlbum: songDataJson.response.song.album ? songDataJson.response.song.album.name : this.state.songAlbum,\n        songArt: songDataJson.response.song.song_art_image_thumbnail_url,\n        songReleasedDate: new Date(songDataJson.response.song.release_date).getFullYear(),\n        songFullTitle: songDataJson.response.song.title_with_featured,\n        songMedia: songDataJson.response.song.media,\n        pageViews: songDataJson.response.song.pageviews,\n        songProducers: songDataJson.response.song.producer_artists,\n        songWriters: songDataJson.response.song.writer_artists\n      }, () => {\n        this.addMediumLogo();\n      });\n    };\n\n    this.addMediumLogo = () => {\n      let songMediaArr = [...this.state.songMedia];\n      let songMediaWithLogo = [];\n\n      for (let i = 0; i < songMediaArr.length; i++) {\n        let mediumObject = songMediaArr[i];\n\n        if (mediumObject.provider === \"youtube\") {\n          mediumObject.logoSrc = require(\"./images/yt_icon_rgb.jpg\");\n        } else if (mediumObject.provider === \"apple_music\" || mediumObject.provider === \"apple_music_preview\") {\n          mediumObject.logoSrc = require(\"./images/Apple_Music_Icon.jpg\");\n        } else if (mediumObject.provider === \"spotify\") {\n          mediumObject.logoSrc = require(\"./images/Spotify_Icon_RGB_Green.jpg\");\n        } else if (mediumObject.provider === \"soundcloud\") {\n          mediumObject.logoSrc = require(\"./images/Soundcloud-logo.jpg\");\n        } else {\n          mediumObject.logoSrc = require(\"./images/Play-icon.jpg\");\n        }\n\n        songMediaWithLogo.push(mediumObject);\n      }\n\n      this.setState({\n        songMedia: songMediaWithLogo\n      });\n    };\n\n    this.handleBackClick = () => {\n      this.props.displaySearchPanel();\n    };\n\n    this.state = {\n      loggedIn: true,\n      accessToken: this.props.accessToken,\n      currentPanel: \"song details\",\n      artist: this.props.artist,\n      songList: this.props.songList,\n      songId: this.props.songId,\n      songFullTitle: \"\",\n      pageViews: \"\",\n      songReleaseDate: \"\",\n      songArt: \"\",\n      songAlbum: \"Sorry, we couldn't find the album\",\n      albumArt: require(\"./images/steve-harvey-697236-unsplash.jpg\"),\n      songMedia: [],\n      songProducers: [],\n      songWriters: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.currentPanel === \"song details\" && React.createElement(\"div\", {\n      className: \"song-details-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"song-title-art\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"song-art-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"song-art\",\n      src: this.state.songArt,\n      alt: \"song art\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      className: \"full-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.songFullTitle, \" by \", this.state.artist)), React.createElement(\"p\", {\n      className: \"release-year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"(\", this.state.songReleasedDate, \")\"), React.createElement(\"div\", {\n      className: \"album-image-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"album-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"From Album \", React.createElement(\"span\", {\n      className: \"album-title-italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.songAlbum)), React.createElement(\"img\", {\n      src: this.state.albumArt,\n      alt: \"Album Art\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"song-producer-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"producer-writer-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Producers:\"), React.createElement(\"div\", {\n      className: \"song-producer-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.songProducers.map(producer => {\n      return React.createElement(\"div\", {\n        key: producer.name,\n        className: \"producer-name-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"producer-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, producer.name), React.createElement(\"img\", {\n        className: \"producer-image\",\n        src: producer.header_image_url,\n        alt: \"producer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }))), React.createElement(\"div\", {\n      className: \"song-writer-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"producer-writer-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Writers:\"), React.createElement(\"div\", {\n      className: \"song-writer-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.songWriters.map(writer => {\n      return React.createElement(\"div\", {\n        key: writer.name,\n        className: \"writer-name-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"writer-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, writer.name), React.createElement(\"img\", {\n        className: \"writer-image\",\n        src: writer.header_image_url,\n        alt: \"writer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }));\n    }))), React.createElement(\"div\", {\n      className: \"media-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"media-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Listen here  \", React.createElement(\"i\", {\n      className: \"fas fa-play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"media-logo-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.songMedia.map(medium => {\n      return React.createElement(\"a\", {\n        className: \"medium-logo\",\n        key: medium.provider,\n        href: medium.url,\n        target: \"/blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, medium.provider.replace(/_/g, \" \"), \" \", React.createElement(\"img\", {\n        className: \"logo-img\",\n        src: medium.logoSrc,\n        alt: \"provider logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }))), React.createElement(\"button\", {\n      className: \"back-button pointer\",\n      onClick: this.handleBackClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Back\")), this.state.currentPanel === \"search\" && this.state.loggedIn === true && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Search, {\n      inputValue: this.props.inputValue,\n      updateInputValue: this.props.updateInputValue,\n      getArtistSongs: this.props.getArtistSongs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"artist-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.props.artist), React.createElement(SongList, {\n      artist: this.props.artist,\n      songList: this.props.songList,\n      displaySongDetails: this.props.displaySongDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SongDetails;","map":{"version":3,"sources":["/Users/amhouel/Documents/GA/projects/genius-music-react-app-project/src/SongDetails/index.js"],"names":["React","Component","Search","SongList","SongDetails","constructor","props","componentDidMount","songData","fetch","state","songId","accessToken","songDataJson","json","setState","albumArt","response","song","album","cover_art_url","songAlbum","name","songArt","song_art_image_thumbnail_url","songReleasedDate","Date","release_date","getFullYear","songFullTitle","title_with_featured","songMedia","media","pageViews","pageviews","songProducers","producer_artists","songWriters","writer_artists","addMediumLogo","songMediaArr","songMediaWithLogo","i","length","mediumObject","provider","logoSrc","require","push","handleBackClick","displaySearchPanel","loggedIn","currentPanel","artist","songList","songReleaseDate","render","map","producer","header_image_url","writer","medium","url","replace","inputValue","updateInputValue","getArtistSongs","displaySongDetails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Search from \"../Search\";\nimport SongList from \"../SongList\";\nimport \"./style.css\";\n\nclass SongDetails extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loggedIn: true,\n            accessToken: this.props.accessToken,\n            currentPanel: \"song details\",\n            artist: this.props.artist,\n            songList: this.props.songList,\n            songId: this.props.songId,\n            songFullTitle: \"\",\n            pageViews: \"\",\n            songReleaseDate: \"\",\n            songArt: \"\",\n            songAlbum: \"Sorry, we couldn't find the album\",\n            albumArt: require(\"./images/steve-harvey-697236-unsplash.jpg\"),\n            songMedia: [],\n            songProducers: [],\n            songWriters: [],\n        }\n    }\n\n    componentDidMount = async () => {\n        const songData = await fetch(`https://api.genius.com/songs/${this.state.songId}?text_format=html&access_token=${this.state.accessToken}`);\n        const songDataJson = await songData.json();\n\n        this.setState({\n            albumArt: songDataJson.response.song.album? songDataJson.response.song.album.cover_art_url : this.state.albumArt,\n            songAlbum: songDataJson.response.song.album? songDataJson.response.song.album.name : this.state.songAlbum,\n            songArt: songDataJson.response.song.song_art_image_thumbnail_url,\n            songReleasedDate: new Date(songDataJson.response.song.release_date).getFullYear(),\n            songFullTitle: songDataJson.response.song.title_with_featured,\n            songMedia: songDataJson.response.song.media,\n            pageViews: songDataJson.response.song.pageviews,\n            songProducers: songDataJson.response.song.producer_artists,\n            songWriters: songDataJson.response.song.writer_artists,\n        }, () => {\n            this.addMediumLogo();\n        });\n\n    }\n\n    addMediumLogo = () => {\n        let songMediaArr = [...this.state.songMedia]\n        let songMediaWithLogo = [];\n        for (let i = 0; i < songMediaArr.length; i++) {\n            let mediumObject = songMediaArr[i];\n            if (mediumObject.provider === \"youtube\") {\n                mediumObject.logoSrc = require(\"./images/yt_icon_rgb.jpg\");\n            }\n            else if (mediumObject.provider === \"apple_music\" || mediumObject.provider === \"apple_music_preview\") {\n                mediumObject.logoSrc = require(\"./images/Apple_Music_Icon.jpg\");\n            }\n            else if (mediumObject.provider === \"spotify\") {\n                mediumObject.logoSrc = require(\"./images/Spotify_Icon_RGB_Green.jpg\");\n            }\n            else if (mediumObject.provider === \"soundcloud\") {\n                mediumObject.logoSrc = require(\"./images/Soundcloud-logo.jpg\");\n            } else {\n                mediumObject.logoSrc = require(\"./images/Play-icon.jpg\");\n            }\n            songMediaWithLogo.push(mediumObject);\n        }\n        this.setState({\n            songMedia: songMediaWithLogo,\n        })\n    }\n\n    handleBackClick = () => {\n        this.props.displaySearchPanel();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.currentPanel === \"song details\" && (\n                    <div className=\"song-details-wrapper\">\n                        <div className=\"song-title-art\">\n                            <div className=\"song-art-wrapper\">\n                                <img className=\"song-art\" src={this.state.songArt} alt=\"song art\" />\n                            </div>\n                            <h1 className=\"full-title\">{this.state.songFullTitle} by {this.state.artist}</h1>\n                        </div>\n                        <p className=\"release-year\">({this.state.songReleasedDate})</p>\n                        <div className=\"album-image-wrapper\">\n                            <h2 className=\"album-title\">From Album <span className=\"album-title-italic\">{this.state.songAlbum}</span></h2>\n                            <img src={this.state.albumArt} alt=\"Album Art\" />\n                        </div>\n                        <div className=\"song-producer-wrapper\">\n                            <h2 className=\"producer-writer-title\">Producers:</h2>\n                            <div className=\"song-producer-list\">\n                                {this.state.songProducers.map(producer => {\n                                    return (\n                                        <div key={producer.name} className=\"producer-name-image\">\n                                            <h3 className=\"producer-name\">{producer.name}</h3>\n                                            <img className=\"producer-image\" src={producer.header_image_url} alt=\"producer\" />\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"song-writer-wrapper\">\n                            <h2 className=\"producer-writer-title\">Writers:</h2>\n                            <div className=\"song-writer-list\">\n                                {this.state.songWriters.map(writer => {\n                                    return (\n                                        <div key={writer.name} className=\"writer-name-image\">\n                                            <h3 className=\"writer-name\">{writer.name}</h3>\n                                            <img className=\"writer-image\" src={writer.header_image_url} alt=\"writer\" />\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"media-wrapper\">\n                            <h3 className=\"media-title\">Listen here  <i className=\"fas fa-play\"></i></h3>\n                            <div className=\"media-logo-wrapper\">\n                                {this.state.songMedia.map(medium => {\n                                    return (\n                                        <a className=\"medium-logo\" key={medium.provider} href={medium.url} target=\"/blank\">{medium.provider.replace(/_/g, \" \")} <img className=\"logo-img\" src={medium.logoSrc} alt=\"provider logo\" /></a>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                        <button className=\"back-button pointer\" onClick={this.handleBackClick}>Back</button>\n                    </div>\n                )}\n\n                {this.state.currentPanel === \"search\" && this.state.loggedIn === true && (\n                    <div>\n                        <Search inputValue={this.props.inputValue} updateInputValue={this.props.updateInputValue} getArtistSongs={this.props.getArtistSongs} />\n                        <h1 className=\"artist-name\">{this.props.artist}</h1>\n                        <SongList\n                            artist={this.props.artist}\n                            songList={this.props.songList}\n                            displaySongDetails={this.props.displaySongDetails}\n                        />\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default SongDetails;"]},"metadata":{},"sourceType":"module"}